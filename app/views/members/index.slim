b Members and their permissions
ul
  li
    ' Add a member:
    input#new_email type="text" size="60" placeholder="john@example.com"
    input type="button" value="Add" *ko(click: 'addUser')
  /!ko foreach: $root.users
  li
    span *ko(text: 'name')
    /!ko if: id == current_user_id
    ' : admin
    /!/ko

    /!ko if: id != current_user_id
    ' :
    select *ko(value: 'role', options: "['member', 'admin']")
    '
    a href="javascript:void(0)" *ko(click: '$root.removeUser') remove
    /!/ko
    br
    ' Applications
    ul
      /!ko foreach: applications
      li
        span *ko(text: 'name')
        /!ko if: $parent.role() != 'admin'
        /!ko if: $parent.id != current_user_id
        ' :
        select *ko(value: 'role', options: "['none', 'member', 'admin']")
        /!/ko
        /!/ko
      /!/ko
    ' Channels
    ul
      /!ko foreach: channels
      li
        span *ko(text: 'name')
        /!ko if: $parent.role() != 'admin'
        /!ko if: $parent.id != current_user_id
        ' :
        select *ko(value: 'role', options: "['none', 'member', 'admin']")
        /!/ko
        /!/ko
      /!/ko
  /!/ko

javascript:
  var model = {}
  model.applications = #{applications.map { |app| {id: app.id, name: app.name} }.to_json.html_safe};
  model.channels = #{channels.map { |app| {id: app.id, name: app.name} }.to_json.html_safe};
  model.users = #{users.map { |user| {id: user.id, name: user.display_name} }.to_json.html_safe};
  model.user_accounts = #{user_accounts.map { |ua| {user_id: ua.user_id, account_id: ua.account_id, role: ua.role} }.to_json.html_safe};
  model.user_applications = #{user_applications.map { |ua| {user_id: ua.user_id, application_id: ua.application_id, role: ua.role} }.to_json.html_safe};
  model.user_channels = #{user_channels.map { |ua| {user_id: ua.user_id, channel_id: ua.channel_id, role: ua.role} }.to_json.html_safe};

  var current_user_id = #{current_user.id};

  initMembers(model);

