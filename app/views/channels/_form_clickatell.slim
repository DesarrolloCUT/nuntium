= form_for_channel channel do |f|
  = render 'edit_header', :f => f, :on_direction_change => 'clickatell_channel_direction_changed()', :exclude_address => true
  hr
  h4 Clickatell account info
  #user_container
    = f.label :user
    = f.text_field :user, :autocomplete => :off
  #password_container
    = f.label :password, 'Password (this is the password of your Clickatell account)'
    = f.password_field :password, :autocomplete => :off
  div
    = f.label :api_id, 'Api ID'
    = f.text_field :api_id
  #from_container
    = f.label :from
    = f.text_field :from
  #network
    = f.label :network
    = f.select :network, options_for_select(ClickatellChannel::CLICKATELL_NETWORKS.map {|v,d| [d,v]}, channel.network)
  #concat_container
    = f.label :concatenation
    = f.text_field :concat, :value => channel.concat || 3
  #callback_incoming
    ' Callback urls for incoming messages (use
    a href="http://en.wikipedia.org/wiki/Basic_access_authentication" target="_blank" Basic Http Authentication
    ' with channel name and incoming password):
    br
    code= clickatell_url(:account_id => account.name)
    br
    br
  #callback_ack
    ' Callback urls for status notification (use
    a href="http://en.wikipedia.org/wiki/Basic_access_authentication" target="_blank" Basic Http Authentication
    ' with channel name and incoming password):
    br
    code= clickatell_ack_url(:account_id => account.name)
    br
    br
  div
    = f.label :incoming_password, 'Iconming password (to use for the callback urls)'
    = f.password_field :incoming_password, :autocomplete => :off
  hr
  h4 Costs
  p
    = f.label :cost_per_credit
    ' (messages will get a 'cost' custom attribute with the value %code charge * cost_per_credit)
    = f.text_field :cost_per_credit, :value => channel.cost_per_credit || 1
  = render 'edit_footer', :f => f, :exclude_costs => true
javascript:
  clickatell_channel_direction_changed();