version: '2.0'

services:
  db:
    image: mysql:5.6
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - db:/var/lib/mysql

  rabbitmq:
    image: rabbitmq:3.5.3
    command: /app/docker-compose-rabbitmq-cmd.sh
    volumes:
      - rabbitmq:/var/lib/rabbitmq
      - .:/app

  memcached:
    image: memcached:1.4.24

  web:
    extends:
      file: docker-compose-base.yml
      service: rails
    command: bash -c "(rm tmp/pids/server.pid 2> /dev/null || true) && sleep 8 && bundle exec rails server -b 0.0.0.0"
    links: &links
      - db
      - rabbitmq
      - memcached
    ports:
      - 3000:3000

  workerfast:
    extends:
      file: docker-compose-base.yml
      service: rails
    links: *links
    environment:
      RAILS_ENV: development
      INSTANCE_ID: 1000
    command: "bundle exec lib/services/generic_worker_daemon.rb $$RAILS_ENV fast $$INSTANCE_ID"

  workerslow:
    extends:
      file: docker-compose-base.yml
      service: rails
    links: *links
    environment:
      RAILS_ENV: development
      INSTANCE_ID: 2000
    command: "bundle exec lib/services/generic_worker_daemon.rb $$RAILS_ENV slow $$INSTANCE_ID"

  xmpp:
    extends:
      file: docker-compose-base.yml
      service: rails
    links: *links
    command: "bundle exec lib/services/xmpp_service_daemon.rb"

  smpp:
    extends:
      file: docker-compose-base.yml
      service: rails
    links: *links
    command: "bundle exec lib/services/smpp_service_daemon.rb"

  msn:
    extends:
      file: docker-compose-base.yml
      service: rails
    links: *links
    command: "bundle exec lib/services/msn_service_daemon.rb"

  cron:
    extends:
      file: docker-compose-base.yml
      service: rails
    links: *links
    command: "bundle exec lib/services/cron_daemon.rb"

  sched:
    extends:
      file: docker-compose-base.yml
      service: rails
    links: *links
    command: "bundle exec lib/services/scheduled_jobs_service_daemon.rb"

volumes:
  db:
  bundle:
  rabbitmq:
